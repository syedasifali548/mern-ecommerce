{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const register = () => {};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    newUser: null,\n    isFetching: false,\n    isError: false,\n    isSuccess: false,\n    isLoading: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n      state.isLoading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n      state.isSuccess = true;\n      state.isLoading = false;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n    },\n    registerStart: state => {\n      state.isFetching = true;\n      state.isLoading = true;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.newUser = action.payload;\n      state.isSuccess = true;\n      state.isLoading = false;\n    },\n    registerFailure: state => {\n      state.isFetching = false;\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n    },\n    logoutSuccess: state => {\n      state.currentUser = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logoutSuccess\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","register","userSlice","name","initialState","currentUser","newUser","isFetching","isError","isSuccess","isLoading","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","registerStart","registerSuccess","registerFailure","logoutSuccess","actions","reducer"],"sources":["E:/Assignments/React/mern-ecommerce/admin/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const register = ()=>{}\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser : null,\r\n        newUser : null,\r\n        isFetching:false,\r\n        isError: false,\r\n        isSuccess: false,\r\n        isLoading: false,\r\n    },\r\n    reducers:{\r\n        loginStart: (state) => {\r\n            state.isFetching = true;\r\n            state.isLoading = true;\r\n          },\r\n          loginSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload;\r\n            state.isSuccess =  true;\r\n            state.isLoading = false\r\n\r\n          },\r\n          loginFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.isLoading = false;\r\n            state.isSuccess =  false;\r\n\r\n          },\r\n        registerStart: (state) => {\r\n            state.isFetching = true;\r\n            state.isLoading = true;\r\n          },\r\n          registerSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.newUser = action.payload;\r\n            state.isSuccess =  true;\r\n            state.isLoading = false\r\n\r\n          },\r\n          registerFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.isLoading = false;\r\n            state.isSuccess =  false;\r\n\r\n          },\r\n          logoutSuccess: (state) => {\r\n             state.currentUser = null;\r\n          },\r\n    },\r\n})\r\n\r\nexport const {loginStart,loginSuccess,loginFailure,\r\n  registerStart,registerSuccess,registerFailure,logoutSuccess\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,QAAQ,GAAG,MAAI,CAAC,CAAC;AAE9B,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,WAAW,EAAG,IAAI;IAClBC,OAAO,EAAG,IAAI;IACdC,UAAU,EAAC,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAC;IACLC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACN,UAAU,GAAG,IAAI;MACvBM,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC;IACDI,YAAY,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACR,WAAW,GAAGU,MAAM,CAACC,OAAO;MAClCH,KAAK,CAACJ,SAAS,GAAI,IAAI;MACvBI,KAAK,CAACH,SAAS,GAAG,KAAK;IAEzB,CAAC;IACDO,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACJ,SAAS,GAAI,KAAK;IAE1B,CAAC;IACHS,aAAa,EAAGL,KAAK,IAAK;MACtBA,KAAK,CAACN,UAAU,GAAG,IAAI;MACvBM,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC;IACDS,eAAe,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACC,OAAO;MAC9BH,KAAK,CAACJ,SAAS,GAAI,IAAI;MACvBI,KAAK,CAACH,SAAS,GAAG,KAAK;IAEzB,CAAC;IACDU,eAAe,EAAGP,KAAK,IAAK;MAC1BA,KAAK,CAACN,UAAU,GAAG,KAAK;MACxBM,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACJ,SAAS,GAAI,KAAK;IAE1B,CAAC;IACDY,aAAa,EAAGR,KAAK,IAAK;MACvBA,KAAK,CAACR,WAAW,GAAG,IAAI;IAC3B;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACO,UAAU;EAACE,YAAY;EAACG,YAAY;EAChDC,aAAa;EAACC,eAAe;EAACC,eAAe;EAACC;AAChD,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AACrB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}