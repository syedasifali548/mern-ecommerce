{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from './userSlice';\nimport ProductReducer from './productSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  product: ProductReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","userReducer","ProductReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","product","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["E:/Assignments/React/mern-ecommerce/MERN-COMMERCE/admin/src/redux/store.js"],"sourcesContent":["import { configureStore ,combineReducers } from \"@reduxjs/toolkit\";\r\nimport userReducer from './userSlice'\r\nimport ProductReducer from './productSlice'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from \"redux-persist\";\r\n  import storage from \"redux-persist/lib/storage\";\r\n  const persistConfig = {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage,\r\n  };\r\n  const rootReducer = combineReducers({ user: userReducer,product : ProductReducer});\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\n  export const store = configureStore({\r\n      reducer: persistedReducer,\r\n      middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n              },\r\n            }),\r\n        });\r\n      \r\n        export let persistor = persistStore(store);\r\n      \r\n\r\n\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVH;AACF,CAAC;AACD,MAAMI,WAAW,GAAGf,eAAe,CAAC;EAAEgB,IAAI,EAAEf,WAAW;EAACgB,OAAO,EAAGf;AAAc,CAAC,CAAC;AAClF,MAAMgB,gBAAgB,GAAGd,cAAc,CAACQ,aAAa,EAAEG,WAAW,CAAC;AAGnE,OAAO,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAChCqB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}