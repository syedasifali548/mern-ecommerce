{"ast":null,"code":"import { loginStart, loginSuccess, loginFailure, registerStart, registerSuccess, registerFailure, logoutSuccess } from \"./userSlice\";\nimport { getProductStart, getProductSuccess, getProductFailure, deleteProductStart, deleteProductSuccess, deleteProductFailure, updateProductStart, updateProductSuccess, updateProductFailure, addProductStart, addProductSuccess, addProductFailure } from \"./productSlice\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\n// To get all the products\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\n// To delete product\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    // const res = await publicRequest.delete(`/products/${id}`)\n    dispatch(deleteProductSuccess(id));\n  } catch (error) {\n    dispatch(deleteProductFailure());\n  }\n};\n// To update product\nexport const updateProduct = async (id, dispatch, product) => {\n  dispatch(updateProductStart());\n  try {\n    const res = userRequest.put(`/products/${id}`);\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateProductFailure());\n  }\n};\n// To Add product\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};\n\n// export const register = async (dispatch,user)=>{\n//   dispatch(registerStart())\n//   try {\n//     const res = await publicRequest.post(\"auth/register\",user)\n//     dispatch(registerSuccess(res.data))\n//   } catch (error) {\n//     dispatch(registerFailure())\n//   }\n// }\n// export const logout = (dispatch)=>{\n//   dispatch(logoutSuccess())\n//   localStorage.removeItem('persist:root')\n// }","map":{"version":3,"names":["loginStart","loginSuccess","loginFailure","registerStart","registerSuccess","registerFailure","logoutSuccess","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","deleteProductFailure","updateProductStart","updateProductSuccess","updateProductFailure","addProductStart","addProductSuccess","addProductFailure","publicRequest","userRequest","login","dispatch","user","res","post","data","error","getProducts","get","deleteProduct","id","updateProduct","product","put","addProduct","err"],"sources":["E:/Assignments/React/mern-ecommerce/admin/src/redux/apiCalls.js"],"sourcesContent":["import { loginStart,loginSuccess,loginFailure ,\r\n  registerStart,registerSuccess,registerFailure,logoutSuccess\r\n} from \"./userSlice\"\r\nimport{\r\n  getProductStart,getProductSuccess,getProductFailure,\r\n  deleteProductStart,deleteProductSuccess,deleteProductFailure,\r\n  updateProductStart,updateProductSuccess,updateProductFailure,\r\n  addProductStart ,addProductSuccess,addProductFailure\r\n} from \"./productSlice\"\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\n\r\n\r\nexport const login = async (dispatch , user)=>{\r\n      dispatch(loginStart())\r\n      try {\r\n        const res = await publicRequest.post(\"auth/login\",user)\r\n        dispatch(loginSuccess(res.data))\r\n      } catch (error) {\r\n        dispatch(loginFailure())\r\n      }\r\n\r\n}\r\n// To get all the products\r\nexport const getProducts = async (dispatch)=>{\r\n  dispatch(getProductStart())\r\n  try {\r\n    const res = await publicRequest.get(\"/products\")\r\n    dispatch(getProductSuccess(res.data))\r\n  } catch (error) {\r\n   dispatch(getProductFailure()) \r\n  }\r\n}\r\n// To delete product\r\nexport const deleteProduct = async (id,dispatch)=>{\r\n  dispatch(deleteProductStart());\r\n  try {\r\n    // const res = await publicRequest.delete(`/products/${id}`)\r\n    dispatch(deleteProductSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteProductFailure())\r\n  }\r\n\r\n}\r\n// To update product\r\nexport const updateProduct =async(id,dispatch,product)=>{\r\n  dispatch(updateProductStart());\r\n  try {\r\n       const res = userRequest.put(`/products/${id}`)\r\n    dispatch(updateProductSuccess({id,product}))\r\n  } catch (error) {\r\n    dispatch(updateProductFailure())\r\n  }\r\n}\r\n// To Add product\r\nexport const addProduct = async (product, dispatch) => {\r\n  dispatch(addProductStart());\r\n  try {\r\n    const res = await userRequest.post(`/products`, product);\r\n    dispatch(addProductSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(addProductFailure());\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const register = async (dispatch,user)=>{\r\n//   dispatch(registerStart())\r\n//   try {\r\n//     const res = await publicRequest.post(\"auth/register\",user)\r\n//     dispatch(registerSuccess(res.data))\r\n//   } catch (error) {\r\n//     dispatch(registerFailure())\r\n//   }\r\n// }\r\n// export const logout = (dispatch)=>{\r\n//   dispatch(logoutSuccess())\r\n//   localStorage.removeItem('persist:root')\r\n// }\r\n"],"mappings":"AAAA,SAASA,UAAU,EAACC,YAAY,EAACC,YAAY,EAC3CC,aAAa,EAACC,eAAe,EAACC,eAAe,EAACC,aAAa,QACtD,aAAa;AACpB,SACEC,eAAe,EAACC,iBAAiB,EAACC,iBAAiB,EACnDC,kBAAkB,EAACC,oBAAoB,EAACC,oBAAoB,EAC5DC,kBAAkB,EAACC,oBAAoB,EAACC,oBAAoB,EAC5DC,eAAe,EAAEC,iBAAiB,EAACC,iBAAiB,QAC/C,gBAAgB;AACvB,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAG9D,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAQ,EAAGC,IAAI,KAAG;EACxCD,QAAQ,CAACtB,UAAU,EAAE,CAAC;EACtB,IAAI;IACF,MAAMwB,GAAG,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,YAAY,EAACF,IAAI,CAAC;IACvDD,QAAQ,CAACrB,YAAY,CAACuB,GAAG,CAACE,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,QAAQ,CAACpB,YAAY,EAAE,CAAC;EAC1B;AAEN,CAAC;AACD;AACA,OAAO,MAAM0B,WAAW,GAAG,MAAON,QAAQ,IAAG;EAC3CA,QAAQ,CAACf,eAAe,EAAE,CAAC;EAC3B,IAAI;IACF,MAAMiB,GAAG,GAAG,MAAML,aAAa,CAACU,GAAG,CAAC,WAAW,CAAC;IAChDP,QAAQ,CAACd,iBAAiB,CAACgB,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfL,QAAQ,CAACb,iBAAiB,EAAE,CAAC;EAC9B;AACF,CAAC;AACD;AACA,OAAO,MAAMqB,aAAa,GAAG,OAAOC,EAAE,EAACT,QAAQ,KAAG;EAChDA,QAAQ,CAACZ,kBAAkB,EAAE,CAAC;EAC9B,IAAI;IACF;IACAY,QAAQ,CAACX,oBAAoB,CAACoB,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdL,QAAQ,CAACV,oBAAoB,EAAE,CAAC;EAClC;AAEF,CAAC;AACD;AACA,OAAO,MAAMoB,aAAa,GAAE,OAAMD,EAAE,EAACT,QAAQ,EAACW,OAAO,KAAG;EACtDX,QAAQ,CAACT,kBAAkB,EAAE,CAAC;EAC9B,IAAI;IACC,MAAMW,GAAG,GAAGJ,WAAW,CAACc,GAAG,CAAE,aAAYH,EAAG,EAAC,CAAC;IACjDT,QAAQ,CAACR,oBAAoB,CAAC;MAACiB,EAAE;MAACE;IAAO,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAON,KAAK,EAAE;IACdL,QAAQ,CAACP,oBAAoB,EAAE,CAAC;EAClC;AACF,CAAC;AACD;AACA,OAAO,MAAMoB,UAAU,GAAG,OAAOF,OAAO,EAAEX,QAAQ,KAAK;EACrDA,QAAQ,CAACN,eAAe,EAAE,CAAC;EAC3B,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAMJ,WAAW,CAACK,IAAI,CAAE,WAAU,EAAEQ,OAAO,CAAC;IACxDX,QAAQ,CAACL,iBAAiB,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOU,GAAG,EAAE;IACZd,QAAQ,CAACJ,iBAAiB,EAAE,CAAC;EAC/B;AACF,CAAC;;AAoBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}