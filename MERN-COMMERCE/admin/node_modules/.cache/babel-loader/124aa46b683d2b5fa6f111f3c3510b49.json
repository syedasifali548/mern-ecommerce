{"ast":null,"code":"import React, { isValidElement, cloneElement, useRef, useEffect, useReducer, useState } from 'react';\nimport { render } from 'react-dom';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(function (timer) {\n        return clearTimeout(timer);\n      });\n      this.emitQueue[\"delete\"](event);\n    }\n    return this;\n  },\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isStr(v) {\n  return typeof v === 'string';\n}\nfunction isFn(v) {\n  return typeof v === 'function';\n}\nfunction parseClassName(v) {\n  return typeof v === 'string' ? v : null;\n}\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\nfunction hasToastId(toastId) {\n  return toastId === 0 || toastId;\n}\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\n/**\r\n * Used to collapse toast after exit animation\r\n */\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n  var height = node.scrollHeight;\n  var style = node.style;\n  function onCollapseEnd() {\n    node.removeEventListener('transitionend', onCollapseEnd);\n    done();\n  }\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n    });\n    node.addEventListener('transitionend', onCollapseEnd);\n  });\n}\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n    exit = _ref.exit,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 750 : _ref$duration,\n    _ref$appendPosition = _ref.appendPosition,\n    appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n    _ref$collapse = _ref.collapse,\n    collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n    _ref$collapseDuration = _ref.collapseDuration,\n    collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  var enterDuration, exitDuration;\n  if (Array.isArray(duration) && duration.length === 2) {\n    enterDuration = duration[0];\n    exitDuration = duration[1];\n  } else {\n    enterDuration = exitDuration = duration;\n  }\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n      position = _ref2.position,\n      preventExitTransition = _ref2.preventExitTransition,\n      done = _ref2.done,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"position\", \"preventExitTransition\", \"done\"]);\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var onEnter = function onEnter() {\n      var node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = enterDuration + \"ms\";\n      }\n    };\n    var onEntered = function onEntered() {\n      var node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n    var onCollapseStart = function onCollapseStart() {\n      var node = props.nodeRef.current;\n      if (node) {\n        collapseToast(node, done, collapseDuration);\n        node.removeEventListener('animationend', onCollapseStart);\n      }\n    };\n    var onExit = function onExit() {\n      var node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = exitDuration + \"ms\";\n        collapse ? node.addEventListener('animationend', onCollapseStart) : done();\n      }\n    };\n    return React.createElement(Transition, Object.assign({}, props, {\n      timeout: preventExitTransition ? 0 : {\n        enter: enterDuration,\n        exit: collapse ? exitDuration + collapseDuration : exitDuration\n      },\n      onEnter: onEnter,\n      onEntered: onEntered,\n      onExit: preventExitTransition ? done : onExit,\n      unmountOnExit: true\n    }), children);\n  };\n}\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n    type = _ref.type,\n    ariaLabel = _ref.ariaLabel;\n  return React.createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nCloseButton.defaultProps = {\n  ariaLabel: 'close'\n};\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n  var delay = _ref.delay,\n    isRunning = _ref.isRunning,\n    closeToast = _ref.closeToast,\n    type = _ref.type,\n    hide = _ref.hide,\n    className = _ref.className,\n    userStyle = _ref.style,\n    controlledProgress = _ref.controlledProgress,\n    progress = _ref.progress,\n    rtl = _ref.rtl,\n    isIn = _ref.isIn;\n  var style = _extends(_extends({}, userStyle), {}, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var classNames = cx(\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--rtl\"] = rtl, _cx), className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent);\n  return React.createElement(\"div\", Object.assign({\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nvar Toast = function Toast(props) {\n  var _cx;\n  var _useToast = useToast(props),\n    isRunning = _useToast.isRunning,\n    preventExitTransition = _useToast.preventExitTransition,\n    toastRef = _useToast.toastRef,\n    eventHandlers = _useToast.eventHandlers;\n  var closeButton = props.closeButton,\n    children = props.children,\n    autoClose = props.autoClose,\n    onClick = props.onClick,\n    type = props.type,\n    hideProgressBar = props.hideProgressBar,\n    closeToast = props.closeToast,\n    Transition = props.transition,\n    position = props.position,\n    className = props.className,\n    style = props.style,\n    bodyClassName = props.bodyClassName,\n    bodyStyle = props.bodyStyle,\n    progressClassName = props.progressClassName,\n    progressStyle = props.progressStyle,\n    updateId = props.updateId,\n    role = props.role,\n    progress = props.progress,\n    rtl = props.rtl,\n    toastId = props.toastId,\n    deleteToast = props.deleteToast;\n  var cssClasses = cx(\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast--rtl\"] = rtl, _cx), className);\n  var controlledProgress = !!progress;\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return null;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n  return React.createElement(Transition, {\n    \"in\": props[\"in\"],\n    appear: true,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), React.createElement(\"div\", Object.assign({}, props[\"in\"] && {\n    role: role\n  }, {\n    className: cx(\"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || controlledProgress) && React.createElement(ProgressBar, Object.assign({}, updateId && !controlledProgress ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: props[\"in\"],\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: controlledProgress,\n    progress: progress\n  }))));\n};\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__slide-exit\",\n  duration: [450, 750],\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__flip-exit\"\n});\nvar ToastPositioner = function ToastPositioner(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\"]);\n\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest[\"in\"];\n  return React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child) {\n    return React.cloneElement(child, rest);\n  }));\n};\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n    getToastToRender = _useToastContainer.getToastToRender,\n    containerRef = _useToastContainer.containerRef,\n    isToastActive = _useToastContainer.isToastActive;\n  var className = props.className,\n    style = props.style,\n    rtl = props.rtl,\n    containerId = props.containerId;\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */,\n\n    id: containerId\n  }, React.createElement(TransitionGroup, {\n    component: null\n  }, getToastToRender(function (position, toastList) {\n    var _cx;\n    var swag = {\n      className: cx(\"Toastify\"\n      /* CSS_NAMESPACE */ + \"__toast-container\", \"Toastify\"\n      /* CSS_NAMESPACE */ + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n      /* CSS_NAMESPACE */ + \"__toast-container--rtl\"] = rtl, _cx), parseClassName(className)),\n      style: toastList.length === 0 ? _extends(_extends({}, style), {}, {\n        pointerEvents: 'none'\n      }) : _extends({}, style)\n    };\n    return React.createElement(ToastPositioner, Object.assign({}, swag, {\n      key: \"container-\" + position\n    }), toastList.map(function (_ref) {\n      var content = _ref.content,\n        toastProps = _ref.props;\n      return React.createElement(Toast, Object.assign({}, toastProps, {\n        \"in\": isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: /*#__PURE__*/PropTypes.oneOf( /*#__PURE__*/objectValues(POSITION)),\n    // @ts-ignore\n    autoClose: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    // @ts-ignore\n    closeButton: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.bool, PropTypes.func]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: /*#__PURE__*/PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\n\nfunction getContainer(containerId) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = getContainer(containerId);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */, content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(React.createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\nfunction mergeOptions(type, options) {\n  return _extends(_extends({}, options), {}, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\ntoast.success = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n};\ntoast.info = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.INFO, options));\n};\ntoast.error = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n};\ntoast.warning = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n};\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DARK, options));\n};\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\n\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return isAnyContainerMounted() && eventManager.emit(1\n  /* Clear */, id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return isAnyContainerMounted() && eventManager.emit(5\n  /* ClearWaitingQueue */, params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n    if (toast) {\n      var oldOptions = toast.props,\n        oldContent = toast.content;\n      var nextOptions = _extends(_extends(_extends({}, oldOptions), options), {}, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = typeof nextOptions.render !== 'undefined' ? nextOptions.render : oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */, callback);\n  }\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */, callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n  lazy = true;\n  containerConfig = config;\n};\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */, item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */).off(1\n    /* Clear */).off(5\n    /* ClearWaitingQueue */);\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\n\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n  var ref = useRef(arg);\n  useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n    case 'REMOVE':\n      return hasToastId(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(reducer, []),\n    toast = _useReducer[0],\n    dispatch = _useReducer[1];\n  var containerRef = useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */).on(0\n    /* Show */, buildToast).on(1\n    /* Clear */, function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */, clearWaitingQueue).emit(2\n    /* DidMount */, instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */, instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */, toast.length, props.containerId);\n  }, [toast]);\n  useEffect(function () {\n    instance.props = props;\n  });\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var _instance$props = instance.props,\n      limit = _instance$props.limit,\n      enableMultiContainer = _instance$props.enableMultiContainer;\n    if (limit && (!containerId || instance.containerId === containerId && enableMultiContainer)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n  function removeToast(toastId) {\n    var queueLen = queue.length;\n    toastCount = hasToastId(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n    if (queueLen > 0) {\n      var freeSlot = hasToastId(toastId) ? 1 : instance.props.limit;\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    }\n    dispatch({\n      type: 'REMOVE',\n      toastId: toastId\n    });\n  }\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n      toastContent = _queue$shift.toastContent,\n      toastProps = _queue$shift.toastProps,\n      staleId = _queue$shift.staleId; // ensure that exit transition has been completed, hence the timeout\n\n    setTimeout(function () {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n      toastId = _ref2.toastId,\n      updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || instance.isToastActive(toastId) && updateId == null ? true : false;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n      staleId = _ref3.staleId,\n      options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n      updateId = options.updateId;\n    var props = instance.props,\n      isToastActive = instance.isToastActive;\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n    var isNotAnUpdate = !isToastActive(toastId);\n    if (isNotAnUpdate) toastCount++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast: function deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    var closeButton = props.closeButton;\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n    toastProps.closeButton = closeButton;\n    var toastContent = content;\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    collection[toastId] = {\n      content: content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n  function removeFromCollection(toastId) {\n    delete collection[toastId];\n  }\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.props.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n  return {\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\nfunction useToast(props) {\n  var _useState = useState(true),\n    isRunning = _useState[0],\n    setIsRunning = _useState[1];\n  var _useState2 = useState(false),\n    preventExitTransition = _useState2[0],\n    setPreventExitTransition = _useState2[1];\n  var toastRef = useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n    pauseOnHover = props.pauseOnHover,\n    closeToast = props.closeToast,\n    onClick = props.onClick,\n    closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n  function onDragStart(e) {\n    var toast = toastRef.current;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n        top = _drag$boundingRect.top,\n        bottom = _drag$boundingRect.bottom,\n        left = _drag$boundingRect.left,\n        right = _drag$boundingRect.right;\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n  function playToast() {\n    setIsRunning(true);\n  }\n  function pauseToast() {\n    setIsRunning(false);\n  }\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n  function onDragMove(e) {\n    var toast = toastRef.current;\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e); // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translateX(\" + drag.deltaX + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.deltaX / drag.removalDistance));\n    }\n  }\n  function onDragEnd() {\n    var toast = toastRef.current;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\nexport { Bounce, Flip, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"sources":["../src/core/eventManager.ts","../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastPositioner.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx","../src/hooks/useKeeper.ts","../src/hooks/toastContainerReducer.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts"],"names":["eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","timer","clearTimeout","emit","args","setTimeout","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","objectValues","obj","keys","map","key","hasToastId","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","collapseToast","node","done","duration","height","scrollHeight","style","onCollapseEnd","removeEventListener","requestAnimationFrame","minHeight","transition","padding","margin","addEventListener","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","enterDuration","exitDuration","Array","isArray","length","ToastTransition","children","position","preventExitTransition","props","enterClassName","exitClassName","onEnter","nodeRef","current","classList","add","animationFillMode","animationDuration","onEntered","remove","cssText","onCollapseStart","onExit","Transition","timeout","unmountOnExit","CloseButton","closeToast","type","ariaLabel","className","onClick","e","stopPropagation","viewBox","fillRule","d","defaultProps","ProgressBar","delay","isRunning","hide","userStyle","controlledProgress","progress","rtl","isIn","animationPlayState","opacity","transform","classNames","cx","animationEvent","React","Toast","toastRef","eventHandlers","useToast","closeButton","autoClose","hideProgressBar","bodyClassName","bodyStyle","progressClassName","progressStyle","updateId","role","deleteToast","cssClasses","renderCloseButton","cloneElement","appear","id","ref","Bounce","Slide","Zoom","Flip","ToastPositioner","rest","Children","child","ToastContainer","getToastToRender","containerRef","isToastActive","useToastContainer","containerId","TransitionGroup","component","toastList","swag","pointerEvents","toastProps","process","env","NODE_ENV","propTypes","PropTypes","oneOf","oneOfType","bool","number","func","pauseOnHover","closeOnClick","newestOnTop","string","object","toastClassName","draggable","draggablePercent","pauseOnFocusLoss","enableMultiContainer","containers","latestInstance","containerDomNode","containerConfig","queue","lazy","isAnyContainerMounted","size","getContainer","getToast","container","generateToastId","Math","random","toString","Date","now","substr","getToastId","options","dispatchToast","body","appendChild","render","mergeOptions","toast","success","info","error","warning","dark","warn","dismiss","clearWaitingQueue","params","isActive","update","oldOptions","oldContent","nextOptions","staleId","onChange","configure","config","containerInstance","item","removeChild","useKeeper","arg","refresh","useRef","useEffect","reducer","state","action","dispatch","useReducer","toastCount","collection","instance","toastKey","displayedToast","buildToast","removeToast","indexOf","limit","queueLen","freeSlot","dequeueToast","toDequeue","i","toastContent","shift","appendToast","isNotValid","isNotAnUpdate","toastStyle","removeFromCollection","onOpen","onClose","toastToRender","Object","reverse","p","getX","targetTouches","clientX","getY","clientY","setIsRunning","useState","setPreventExitTransition","drag","start","x","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","bindDragEvents","unbindDragEvents","bindFocusEvents","unbindFocusEvents","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","onDragMove","onDragEnd","abs","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave"],"mappings":"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","sourcesContent":["import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { isValidElement } from 'react';\n\nimport { Id } from 'types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","export type TypeOptions = 'info' | 'success' | 'warning' | 'error' | 'default';\nexport type Positons =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport const POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  function onCollapseEnd() {\n    node.removeEventListener('transitionend', onCollapseEnd);\n    done();\n  }\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n    });\n    node.addEventListener('transitionend', onCollapseEnd);\n  });\n}\n","import React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from 'types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    const onCollapseStart = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        collapseToast(node, done, collapseDuration);\n        node.removeEventListener('animationend', onCollapseStart);\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        collapse\n          ? node.addEventListener('animationend', onCollapseStart)\n          : done();\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? 0\n            : {\n                enter: enterDuration,\n                exit: collapse ? exitDuration + collapseDuration : exitDuration\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? done : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import React from 'react';\nimport { DEFAULT, TypeOptions } from '../utils';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel: string;\n}\n\nexport function CloseButton({ closeToast, type, ariaLabel }: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nCloseButton.defaultProps = {\n  ariaLabel: 'close'\n};\n","import React, { CSSProperties } from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, DEFAULT, TypeOptions } from './../utils';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React, { isValidElement, cloneElement } from 'react';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const cssClasses = cx(\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import React from 'react';\nimport { ToastProps } from 'types';\n\ntype ToastPositionerProps = Pick<ToastProps, 'className' | 'style' | 'in'>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, DEFAULT, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      <TransitionGroup component={null}>\n        {getToastToRender((position, toastList) => {\n          const swag = {\n            className: cx(\n              `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n              `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n              { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n              parseClassName(className)\n            ),\n            style:\n              toastList.length === 0\n                ? { ...style, pointerEvents: 'none' }\n                : { ...style }\n          } as any;\n\n          return (\n            <ToastPositioner {...swag} key={`container-${position}`}>\n              {toastList.map(({ content, props: toastProps }) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    in={isToastActive(toastProps.toastId)}\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </ToastPositioner>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from 'types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport { eventManager, Event } from '../core';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n"]},"metadata":{},"sourceType":"module"}