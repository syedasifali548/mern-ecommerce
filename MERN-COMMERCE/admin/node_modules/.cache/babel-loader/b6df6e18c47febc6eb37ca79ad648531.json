{"ast":null,"code":"import { loginStart, loginSuccess, loginFailure, registerStart, registerSuccess, registerFailure, logoutSuccess } from \"./userSlice\";\nimport { getProductStart, getProductSuccess, getProductFailure } from \"./productSlice\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const products = async dispatch => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\n\n// export const register = async (dispatch,user)=>{\n//   dispatch(registerStart())\n//   try {\n//     const res = await publicRequest.post(\"auth/register\",user)\n//     dispatch(registerSuccess(res.data))\n//   } catch (error) {\n//     dispatch(registerFailure())\n//   }\n// }\n// export const logout = (dispatch)=>{\n//   dispatch(logoutSuccess())\n//   localStorage.removeItem('persist:root')\n// }","map":{"version":3,"names":["loginStart","loginSuccess","loginFailure","registerStart","registerSuccess","registerFailure","logoutSuccess","getProductStart","getProductSuccess","getProductFailure","publicRequest","userRequest","login","dispatch","user","res","post","data","error","products","get"],"sources":["E:/Assignments/React/mern-ecommerce/admin/src/redux/apiCalls.js"],"sourcesContent":["import { loginStart,loginSuccess,loginFailure ,\r\n  registerStart,registerSuccess,registerFailure,logoutSuccess\r\n} from \"./userSlice\"\r\nimport{getProductStart,getProductSuccess,getProductFailure} from \"./productSlice\"\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\n\r\n\r\nexport const login = async (dispatch , user)=>{\r\n      dispatch(loginStart())\r\n      try {\r\n        const res = await publicRequest.post(\"auth/login\",user)\r\n        dispatch(loginSuccess(res.data))\r\n      } catch (error) {\r\n        dispatch(loginFailure())\r\n      }\r\n\r\n}\r\nexport const products = async (dispatch)=>{\r\n  dispatch(getProductStart())\r\n  try {\r\n    const res = await publicRequest.get(\"/products\")\r\n    dispatch(getProductSuccess(res.data))\r\n  } catch (error) {\r\n   dispatch(getProductFailure()) \r\n  }\r\n}\r\n\r\n\r\n\r\n// export const register = async (dispatch,user)=>{\r\n//   dispatch(registerStart())\r\n//   try {\r\n//     const res = await publicRequest.post(\"auth/register\",user)\r\n//     dispatch(registerSuccess(res.data))\r\n//   } catch (error) {\r\n//     dispatch(registerFailure())\r\n//   }\r\n// }\r\n// export const logout = (dispatch)=>{\r\n//   dispatch(logoutSuccess())\r\n//   localStorage.removeItem('persist:root')\r\n// }\r\n"],"mappings":"AAAA,SAASA,UAAU,EAACC,YAAY,EAACC,YAAY,EAC3CC,aAAa,EAACC,eAAe,EAACC,eAAe,EAACC,aAAa,QACtD,aAAa;AACpB,SAAOC,eAAe,EAACC,iBAAiB,EAACC,iBAAiB,QAAO,gBAAgB;AACjF,SAASC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAG9D,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAQ,EAAGC,IAAI,KAAG;EACxCD,QAAQ,CAACb,UAAU,EAAE,CAAC;EACtB,IAAI;IACF,MAAMe,GAAG,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,YAAY,EAACF,IAAI,CAAC;IACvDD,QAAQ,CAACZ,YAAY,CAACc,GAAG,CAACE,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,QAAQ,CAACX,YAAY,EAAE,CAAC;EAC1B;AAEN,CAAC;AACD,OAAO,MAAMiB,QAAQ,GAAG,MAAON,QAAQ,IAAG;EACxCA,QAAQ,CAACN,eAAe,EAAE,CAAC;EAC3B,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAML,aAAa,CAACU,GAAG,CAAC,WAAW,CAAC;IAChDP,QAAQ,CAACL,iBAAiB,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfL,QAAQ,CAACJ,iBAAiB,EAAE,CAAC;EAC9B;AACF,CAAC;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}