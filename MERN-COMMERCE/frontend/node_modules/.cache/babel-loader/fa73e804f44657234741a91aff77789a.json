{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Assignments\\\\React\\\\mern-ecommerce\\\\frontend\\\\src\\\\pages\\\\Success.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { userRequest } from \"../requestMethods\";\n\nconst Success = () => {\n  _s();\n\n  var _location$state, _location$state2;\n\n  const location = useLocation(); //in Cart.jsx I sent data and cart. Please check that page for the changes.(in video it's only data)\n\n  const data = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.stripeData;\n  const cart = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.cart;\n  const currentUser = useSelector(state => {\n    var _state$user;\n\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.currentUser;\n  });\n  const [orderId, setOrderId] = useState(null);\n  useEffect(() => {\n    const createOrder = async () => {\n      try {\n        const res = await userRequest.post(\"/orders\", {\n          userId: currentUser._id,\n          products: cart.products.map(item => ({\n            productId: item._id,\n            quantity: item._quantity\n          })),\n          amount: cart.total,\n          address: data.billing_details.address\n        });\n        setOrderId(res.data._id);\n      } catch {}\n    };\n\n    data && createOrder();\n  }, [cart, data, currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [orderId ? `Order has been created successfully. Your order number is ${orderId}` : `Successfull. Your order is being prepared...`, /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: 10,\n          marginTop: 20\n        },\n        children: \"Go to Homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Success, \"L0ejNGWx/B2Jrw66akSOSCWir8U=\", false, function () {\n  return [useLocation, useSelector];\n});\n\n_c = Success;\nexport default Success;\n\nvar _c;\n\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"sources":["E:/Assignments/React/mern-ecommerce/frontend/src/pages/Success.js"],"names":["useEffect","useState","useSelector","useLocation","Link","userRequest","Success","location","data","state","stripeData","cart","currentUser","user","orderId","setOrderId","createOrder","res","post","userId","_id","products","map","item","productId","quantity","_quantity","amount","total","address","billing_details","height","display","flexDirection","alignItems","justifyContent","textDecoration","padding","marginTop"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CADoB,CAEpB;;AACA,QAAMK,IAAI,sBAAGD,QAAQ,CAACE,KAAZ,oDAAG,gBAAgBC,UAA7B;AACA,QAAMC,IAAI,uBAAGJ,QAAQ,CAACE,KAAZ,qDAAG,iBAAgBE,IAA7B;AACA,QAAMC,WAAW,GAAGV,WAAW,CAAEO,KAAD;AAAA;;AAAA,0BAAWA,KAAK,CAACI,IAAjB,gDAAW,YAAYD,WAAvB;AAAA,GAAD,CAA/B;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMZ,WAAW,CAACa,IAAZ,CAAiB,SAAjB,EAA4B;AAC5CC,UAAAA,MAAM,EAAEP,WAAW,CAACQ,GADwB;AAE5CC,UAAAA,QAAQ,EAAEV,IAAI,CAACU,QAAL,CAAcC,GAAd,CAAmBC,IAAD,KAAW;AACrCC,YAAAA,SAAS,EAAED,IAAI,CAACH,GADqB;AAErCK,YAAAA,QAAQ,EAAEF,IAAI,CAACG;AAFsB,WAAX,CAAlB,CAFkC;AAM5CC,UAAAA,MAAM,EAAEhB,IAAI,CAACiB,KAN+B;AAO5CC,UAAAA,OAAO,EAAErB,IAAI,CAACsB,eAAL,CAAqBD;AAPc,SAA5B,CAAlB;AASAd,QAAAA,UAAU,CAACE,GAAG,CAACT,IAAJ,CAASY,GAAV,CAAV;AACD,OAXD,CAWE,MAAM,CAAE;AACX,KAbD;;AAcAZ,IAAAA,IAAI,IAAIQ,WAAW,EAAnB;AACD,GAhBQ,EAgBN,CAACL,IAAD,EAAOH,IAAP,EAAaI,WAAb,CAhBM,CAAT;AAkBA,sBACE;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,aAAa,EAAE,QAHV;AAILC,MAAAA,UAAU,EAAE,QAJP;AAKLC,MAAAA,cAAc,EAAE;AALX,KADT;AAAA,eASGrB,OAAO,GACH,6DAA4DA,OAAQ,EADjE,GAEH,8CAXP,eAYI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AACA,MAAA,KAAK,EAAE;AAACsB,QAAAA,cAAc,EAAC;AAAhB,OADP;AAAA,6BAGA;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,SAAS,EAAE;AAA1B,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9CD;;GAAMhC,O;UACaH,W,EAIGD,W;;;KALhBI,O;AAgDN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userRequest } from \"../requestMethods\";\r\n\r\nconst Success = () => {\r\n  const location = useLocation();\r\n  //in Cart.jsx I sent data and cart. Please check that page for the changes.(in video it's only data)\r\n  const data = location.state?.stripeData;\r\n  const cart = location.state?.cart;\r\n  const currentUser = useSelector((state) => state.user?.currentUser);\r\n  const [orderId, setOrderId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const createOrder = async () => {\r\n      try {\r\n        const res = await userRequest.post(\"/orders\", {\r\n          userId: currentUser._id,\r\n          products: cart.products.map((item) => ({\r\n            productId: item._id,\r\n            quantity: item._quantity,\r\n          })),\r\n          amount: cart.total,\r\n          address: data.billing_details.address,\r\n        });\r\n        setOrderId(res.data._id);\r\n      } catch {}\r\n    };\r\n    data && createOrder();\r\n  }, [cart, data, currentUser]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {orderId\r\n        ? `Order has been created successfully. Your order number is ${orderId}`\r\n        : `Successfull. Your order is being prepared...`}\r\n        <Link to=\"/\"\r\n        style={{textDecoration:'none' }}\r\n        >\r\n        <button style={{ padding: 10, marginTop: 20 }}>Go to Homepage</button>\r\n        </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;"]},"metadata":{},"sourceType":"module"}