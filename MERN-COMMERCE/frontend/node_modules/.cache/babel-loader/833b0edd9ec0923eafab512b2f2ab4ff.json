{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.id !== action.payload.id);\n    },\n    updateUser: (state, action) => {\n      state.value.map(user => {\n        if (user.id === action.payload.id) {\n          user.username = action.payload.username;\n        }\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["E:/Assignments/React/Router/my-app/src/redux/features/User.js"],"names":["createSlice","userSlice","name","initialState","value","reducers","addUser","state","action","push","payload","deleteUser","filter","user","id","updateUser","map","username","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAC,OAD4B;AAEjCC,EAAAA,YAAY,EAAC;AAACC,IAAAA,KAAK,EAAC;AAAP,GAFoB;AAGjCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACtBD,MAAAA,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACD,KAHI;AAILC,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAAxD,CAAd;AACD,KANE;AAOLC,IAAAA,UAAU,EAAC,CAACR,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACH,KAAN,CAAYY,GAAZ,CAAiBH,IAAD,IAAQ;AACpB,YAAGA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA9B,EAAiC;AAC/BD,UAAAA,IAAI,CAACI,QAAL,GAAgBT,MAAM,CAACE,OAAP,CAAeO,QAA/B;AACD;AACJ,OAJD;AAKH;AAbI;AAHwB,CAAD,CAA7B;AAmBP,OAAO,MAAM;AAACX,EAAAA,OAAD;AAASK,EAAAA,UAAT;AAAoBI,EAAAA;AAApB,IAAkCd,SAAS,CAACiB,OAAlD;AACP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const userSlice = createSlice({\r\n    name:\"users\",\r\n    initialState:{value:[]},\r\n    reducers:{\r\n        addUser:(state,action)=>{\r\n          state.value.push(action.payload)\r\n        },\r\n        deleteUser: (state, action) => {\r\n            state.value = state.value.filter((user) => user.id !== action.payload.id);\r\n          },\r\n        updateUser:(state,action)=>{\r\n            state.value.map((user)=>{\r\n                if(user.id === action.payload.id){\r\n                  user.username = action.payload.username\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\nexport const {addUser,deleteUser,updateUser} = userSlice.actions;\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}