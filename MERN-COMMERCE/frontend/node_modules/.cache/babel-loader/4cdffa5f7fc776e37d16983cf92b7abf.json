{"ast":null,"code":"// import { configureStore,combineReducers  } from \"@reduxjs/toolkit\";\n// import cartReducer from './cartSlice'\n// import userReducer from './userSlice'\n// import {\n//     persistStore,\n//     persistReducer,\n//     FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER,\n//   } from \"redux-persist\";\n//   import storage from \"redux-persist/lib/storage\";\n//   const persistConfig = {\n//     key: \"root\",\n//     version: 1,\n//     storage,\n//   };\n//   const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n//   const persistedReducer = persistReducer(persistConfig, rootReducer);\n//   export const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware: (getDefaultMiddleware) =>\n//       getDefaultMiddleware({\n//         serializableCheck: {\n//           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//         },\n//       }),\n//   });\n//   export let persistor = persistStore(store);\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from './auth';\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer\n  }\n});","map":{"version":3,"sources":["E:/Assignments/React/mern-ecommerce/frontend/src/redux/store.js"],"names":["configureStore","authReducer","store","reducer","auth"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACE;AACA;AACA;AACE;AACE;AACA;AACA;AACA;AAEA;AAEN,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAChCG,EAAAA,OAAO,EAAC;AAAEC,IAAAA,IAAI,EAAGH;AAAT;AADwB,CAAD,CAA5B","sourcesContent":["// import { configureStore,combineReducers  } from \"@reduxjs/toolkit\";\r\n// import cartReducer from './cartSlice'\r\n// import userReducer from './userSlice'\r\n// import {\r\n//     persistStore,\r\n//     persistReducer,\r\n//     FLUSH,\r\n//     REHYDRATE,\r\n//     PAUSE,\r\n//     PERSIST,\r\n//     PURGE,\r\n//     REGISTER,\r\n//   } from \"redux-persist\";\r\n//   import storage from \"redux-persist/lib/storage\";\r\n//   const persistConfig = {\r\n//     key: \"root\",\r\n//     version: 1,\r\n//     storage,\r\n//   };\r\n//   const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n//   const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\n//   export const store = configureStore({\r\n  //     reducer: persistedReducer,\r\n  //     middleware: (getDefaultMiddleware) =>\r\n  //       getDefaultMiddleware({\r\n    //         serializableCheck: {\r\n      //           ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      //         },\r\n      //       }),\r\n      //   });\r\n      \r\n      //   export let persistor = persistStore(store);\r\n      \r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from './auth'\r\n\r\nexport const store = configureStore({\r\n    reducer:{ auth : authReducer}\r\n})"]},"metadata":{},"sourceType":"module"}