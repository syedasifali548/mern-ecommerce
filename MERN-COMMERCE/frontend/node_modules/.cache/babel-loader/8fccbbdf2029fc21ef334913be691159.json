{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { pubicRequest } from \"../requestMethods\"; // Get user from localStorage\n// const user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n  user: null,\n  isError: false,\n  isSucceess: false,\n  isLoading: false,\n  message: \"\"\n}; // Register user \n\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await pubicRequest.register(user);\n  } catch (error) {}\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSucceess = false;\n      state.isSucceess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["E:/Assignments/React/mern-ecommerce/frontend/src/redux/auth.js"],"names":["createAsyncThunk","createSlice","pubicRequest","initialState","user","isError","isSucceess","isLoading","message","register","thunkAPI","error","authSlice","name","reducers","reset","state","extraReducers","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,YAAT,QAA6B,mBAA7B,C,CAGA;AACA;;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAG,IADS;AAEhBC,EAAAA,OAAO,EAAG,KAFM;AAGhBC,EAAAA,UAAU,EAAG,KAHG;AAIhBC,EAAAA,SAAS,EAAG,KAJI;AAKhBC,EAAAA,OAAO,EAAG;AALM,CAApB,C,CAOA;;AAEA,OAAO,MAAMC,QAAQ,GAAGT,gBAAgB,CAAC,eAAD,EACxC,OAAMI,IAAN,EAAWM,QAAX,KAAsB;AAClB,MAAI;AACA,WAAO,MAAMR,YAAY,CAACO,QAAb,CAAsBL,IAAtB,CAAb;AACH,GAFD,CAEE,OAAOO,KAAP,EAAc,CAEf;AACJ,CAPuC,CAAjC;AAUP,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAC;AAClCY,EAAAA,IAAI,EAAC,MAD6B;AAElCV,EAAAA,YAFkC;AAGlCW,EAAAA,QAAQ,EAAC;AACRC,IAAAA,KAAK,EAAEC,KAAD,IAAS;AACXA,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACV,UAAN,GAAmB,KAAnB;AACAU,MAAAA,KAAK,CAACV,UAAN,GAAmB,KAAnB;AACAU,MAAAA,KAAK,CAACR,OAAN,GAAgB,EAAhB;AACH;AANO,GAHyB;AAWlCS,EAAAA,aAAa,EAAC,MAAI,CAAE;AAXc,CAAD,CAA7B;AAaP,OAAO,MAAM;AAACF,EAAAA;AAAD,IAAUH,SAAS,CAACM,OAA1B;AACP,eAAeN,SAAS,CAACO,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { pubicRequest } from \"../requestMethods\"\r\n\r\n\r\n// Get user from localStorage\r\n// const user = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst initialState ={\r\n    user : null,\r\n    isError : false,\r\n    isSucceess : false,\r\n    isLoading : false,\r\n    message : \"\"\r\n}\r\n// Register user \r\n\r\nexport const register = createAsyncThunk(\"auth/register\",\r\nasync(user,thunkAPI)=>{\r\n    try {\r\n        return await pubicRequest.register(user)\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n)\r\n\r\nexport const authSlice = createSlice({\r\n   name:\"auth\",\r\n   initialState,\r\n   reducers:{\r\n    reset:(state)=>{\r\n        state.isLoading = false;\r\n        state.isSucceess = false;\r\n        state.isSucceess = false;\r\n        state.message = \"\";\r\n    }\r\n   },\r\n   extraReducers:()=>{}\r\n})\r\nexport const {reset} = authSlice.actions;\r\nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}