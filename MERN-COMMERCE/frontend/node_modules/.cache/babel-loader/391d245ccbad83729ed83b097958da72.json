{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.id !== action.payload.id);\n    },\n    updateUsername: (state, action) => {\n      state.value.map(user => {\n        if (user.id === action.payload.id) {\n          user.username = action.payload.username;\n        }\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateUsername\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["E:/Assignments/React/Router/my-app/src/redux/features/User.js"],"names":["createSlice","userSlice","name","initialState","value","reducers","addUser","state","action","push","payload","deleteUser","filter","user","id","updateUsername","map","username","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACD,KAHO;AAKRC,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAAxD,CAAd;AACD,KAPO;AASRC,IAAAA,cAAc,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACH,KAAN,CAAYY,GAAZ,CAAiBH,IAAD,IAAU;AACxB,YAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA/B,EAAmC;AACjCD,UAAAA,IAAI,CAACI,QAAL,GAAgBT,MAAM,CAACE,OAAP,CAAeO,QAA/B;AACD;AACF,OAJD;AAKD;AAfO;AAHuB,CAAD,CAA7B;AAsBL,OAAO,MAAM;AAAEX,EAAAA,OAAF;AAAWK,EAAAA,UAAX;AAAuBI,EAAAA;AAAvB,IAA0Cd,SAAS,CAACiB,OAA1D;AACP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"users\",\r\n    initialState: { value: [] },\r\n    reducers: {\r\n      addUser: (state, action) => {\r\n        state.value.push(action.payload);\r\n      },\r\n  \r\n      deleteUser: (state, action) => {\r\n        state.value = state.value.filter((user) => user.id !== action.payload.id);\r\n      },\r\n  \r\n      updateUsername: (state, action) => {\r\n        state.value.map((user) => {\r\n          if (user.id === action.payload.id) {\r\n            user.username = action.payload.username;\r\n          }\r\n        });\r\n      },\r\n    },\r\n  });\r\n  \r\n  export const { addUser, deleteUser, updateUsername } = userSlice.actions;\r\n  export default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}