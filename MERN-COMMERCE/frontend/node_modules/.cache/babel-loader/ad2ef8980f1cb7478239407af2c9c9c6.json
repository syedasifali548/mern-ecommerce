{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Assignments\\\\React\\\\Router\\\\my-app\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement, incrementByAmount, reset } from '../features/counter/counterSlice';\n\nconst Counter = () => {\n  _s();\n\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(0);\n  const addValue = Number(incrementAmount) || 0;\n\n  const resetAll = () => {\n    setIncrementAmount(0);\n    dispatch(reset());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(increment()),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(decrement()),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"70/jaTJ/lmzjS4ZpoADhzPWGVZI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["E:/Assignments/React/Router/my-app/src/components/Counter.js"],"names":["React","useState","useDispatch","useSelector","increment","decrement","incrementByAmount","reset","Counter","count","state","counter","dispatch","incrementAmount","setIncrementAmount","addValue","Number","resetAll","textAlign","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAmBC,SAAnB,EAA8BC,iBAA9B,EAAgDC,KAAhD,QAA6D,kCAA7D;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACC,OAAN,CAAcF,KAAxB,CAAzB;AAEA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAK,CAACW,eAAD,EAAiBC,kBAAjB,IAAuCb,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAMc,QAAQ,GAAEC,MAAM,CAACH,eAAD,CAAN,IAA2B,CAA3C;;AAEA,QAAMI,QAAQ,GAAE,MAAI;AAChBH,IAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAF,IAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACH,GAHD;;AAIF,sBACE;AAAA,2BACI;AAAS,MAAA,KAAK,EAAE;AAACW,QAAAA,SAAS,EAAC;AAAX,OAAhB;AAAA,8BACG;AAAA,kBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAK,QAAA,KAAK,EAAE;AAACU,UAAAA,OAAO,EAAC;AAAT,SAAZ;AAAA,gCACA;AAAQ,UAAA,OAAO,EAAE,MAAIP,QAAQ,CAACR,SAAS,EAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAE,MAAIQ,QAAQ,CAACP,SAAS,EAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxBD;;GAAMG,O;UACYL,W,EAEGD,W;;;KAHfM,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { increment,decrement, incrementByAmount,reset } from '../features/counter/counterSlice'\r\n\r\nconst Counter = () => {\r\n    const count = useSelector((state)=>state.counter.count)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const[incrementAmount,setIncrementAmount] = useState(0)\r\n\r\n    const addValue =Number(incrementAmount) || 0;\r\n\r\n    const resetAll =()=>{\r\n        setIncrementAmount(0)\r\n        dispatch(reset());\r\n    }\r\n  return (\r\n    <div>\r\n        <section style={{textAlign:'center'}}>\r\n           <h2>{count}</h2>\r\n           <div style={{display:'flex'}}>\r\n           <button onClick={()=>dispatch(increment())}>+</button>\r\n           <button onClick={()=>dispatch(decrement())}>-</button>\r\n           </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}