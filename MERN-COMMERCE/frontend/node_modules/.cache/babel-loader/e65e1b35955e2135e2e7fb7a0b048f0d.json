{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Assignments\\\\React\\\\Router\\\\my-app\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement, decrementreset, incrementByAmount } from '../features/counter/counterSlice';\n\nconst Counter = () => {\n  _s();\n\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(0);\n  const addValue = Number(incrementAmount) || 0;\n\n  const resetAll = () => {\n    setIncrementAmount(0);\n    dispatch(reset());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: incrementAmount,\n      onChange: e => setIncrementAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(incrementByAmount(addValue)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetAll,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"sZy6uAvQKvXeI2APXYl6CAWhzHw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["E:/Assignments/React/Router/my-app/src/components/Counter.js"],"names":["useState","useDispatch","useSelector","increment","decrement","decrementreset","incrementByAmount","Counter","count","state","counter","dispatch","incrementAmount","setIncrementAmount","addValue","Number","resetAll","reset","e","target","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAmBC,SAAnB,EAA6BC,cAA7B,EAA4CC,iBAA5C,QAAqE,kCAArE;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,KAA1B,CAAzB;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,CAAD,CAAtD;AAEA,QAAMc,QAAQ,GAAGC,MAAM,CAACH,eAAD,CAAN,IAA2B,CAA5C;;AAEA,QAAMI,QAAQ,GAAG,MAAM;AACnBH,IAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAF,IAAAA,QAAQ,CAACM,KAAK,EAAN,CAAR;AACH,GAHD;;AAIF,sBACE;AAAA,4BACA;AAAA,gBAAIT;AAAJ;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAACR,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACP,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAOA;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEQ,eAFX;AAGI,MAAA,QAAQ,EAAGM,CAAD,IAAOL,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAHvC;AAAA;AAAA;AAAA;AAAA,YAPA,eAaA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMT,QAAQ,CAACL,iBAAiB,CAACQ,QAAD,CAAlB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhCD;;GAAMT,O;UACYL,W,EACGD,W;;;KAFfM,O;AAmCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { increment,decrement,decrementreset,incrementByAmount } from '../features/counter/counterSlice'\r\n\r\nconst Counter = () => {\r\n    const count = useSelector((state) => state.counter.count);\r\n    const dispatch = useDispatch();\r\n\r\n    const [incrementAmount, setIncrementAmount] = useState(0);\r\n\r\n    const addValue = Number(incrementAmount) || 0;\r\n\r\n    const resetAll = () => {\r\n        setIncrementAmount(0);\r\n        dispatch(reset());\r\n    }\r\n  return (\r\n    <section>\r\n    <p>{count}</p>\r\n    <div>\r\n        <button onClick={() => dispatch(increment())}>+</button>\r\n        <button onClick={() => dispatch(decrement())}>-</button>\r\n    </div>\r\n\r\n    <input\r\n        type=\"text\"\r\n        value={incrementAmount}\r\n        onChange={(e) => setIncrementAmount(e.target.value)}\r\n    />\r\n\r\n    <div>\r\n        <button onClick={() => dispatch(incrementByAmount(addValue))}>Add Amount</button>\r\n        <button onClick={resetAll}>Reset</button>\r\n    </div>\r\n</section>\r\n  )\r\n}\r\n\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}