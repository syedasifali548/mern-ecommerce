{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // Register User\n\nexport const register = () => {};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    newUser: null,\n    isFetching: false,\n    isError: false,\n    isSuccess: false,\n    isLoading: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n      state.isLoading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n      state.isSuccess = true;\n      state.isLoading = false;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n    },\n    registerStart: state => {\n      state.isFetching = true;\n      state.isLoading = true;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.newUser = action.payload;\n      state.isSuccess = true;\n      state.isLoading = false;\n    },\n    registerFailure: state => {\n      state.isFetching = false;\n      state.isError = true;\n      state.isLoading = false;\n      state.isSuccess = false;\n    },\n    logout: state => {\n      state.currentUser = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["E:/Assignments/React/mern-ecommerce/frontend/src/redux/userSlice.js"],"names":["createSlice","register","userSlice","name","initialState","currentUser","newUser","isFetching","isError","isSuccess","isLoading","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","registerStart","registerSuccess","registerFailure","logout","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAI,CAAE,CAAvB;AAEP,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAG,IADL;AAETC,IAAAA,OAAO,EAAG,IAFD;AAGTC,IAAAA,UAAU,EAAC,KAHF;AAITC,IAAAA,OAAO,EAAE,KAJA;AAKTC,IAAAA,SAAS,EAAE,KALF;AAMTC,IAAAA,SAAS,EAAE;AANF,GAFa;AAU1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACAM,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAJE;AAKHI,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACAM,MAAAA,KAAK,CAACR,WAAN,GAAoBU,MAAM,CAACC,OAA3B;AACAH,MAAAA,KAAK,CAACJ,SAAN,GAAmB,IAAnB;AACAI,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AAED,KAXE;AAYHO,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACAK,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,SAAN,GAAmB,KAAnB;AAED,KAlBE;AAmBLS,IAAAA,aAAa,EAAGL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACAM,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAtBE;AAuBHS,IAAAA,eAAe,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACAM,MAAAA,KAAK,CAACP,OAAN,GAAgBS,MAAM,CAACC,OAAvB;AACAH,MAAAA,KAAK,CAACJ,SAAN,GAAmB,IAAnB;AACAI,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AAED,KA7BE;AA8BHU,IAAAA,eAAe,EAAGP,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACAK,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,SAAN,GAAmB,KAAnB;AAED,KApCE;AAqCHY,IAAAA,MAAM,EAAGR,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACR,WAAN,GAAoB,IAApB;AAEF;AAxCE;AAViB,CAAD,CAA7B;AAsDA,OAAO,MAAM;AAACO,EAAAA,UAAD;AAAYE,EAAAA,YAAZ;AAAyBG,EAAAA,YAAzB;AACXC,EAAAA,aADW;AACGC,EAAAA,eADH;AACmBC,EAAAA,eADnB;AACmCC,EAAAA;AADnC,IAETnB,SAAS,CAACoB,OAFP;AAGP,eAAepB,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Register User\r\nexport const register = ()=>{}\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser : null,\r\n        newUser : null,\r\n        isFetching:false,\r\n        isError: false,\r\n        isSuccess: false,\r\n        isLoading: false,\r\n    },\r\n    reducers:{\r\n        loginStart: (state) => {\r\n            state.isFetching = true;\r\n            state.isLoading = true;\r\n          },\r\n          loginSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload;\r\n            state.isSuccess =  true;\r\n            state.isLoading = false\r\n\r\n          },\r\n          loginFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.isLoading = false;\r\n            state.isSuccess =  false;\r\n\r\n          },\r\n        registerStart: (state) => {\r\n            state.isFetching = true;\r\n            state.isLoading = true;\r\n          },\r\n          registerSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.newUser = action.payload;\r\n            state.isSuccess =  true;\r\n            state.isLoading = false\r\n\r\n          },\r\n          registerFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.isError = true;\r\n            state.isLoading = false;\r\n            state.isSuccess =  false;\r\n\r\n          },\r\n          logout: (state) => {\r\n             state.currentUser = null;\r\n\r\n          },\r\n    },\r\n})\r\n\r\nexport const {loginStart,loginSuccess,loginFailure,\r\n  registerStart,registerSuccess,registerFailure,logout\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}