{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from './cartSlice';\nimport authReducer from './auth';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  cart: cartReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["E:/Assignments/React/mern-ecommerce/frontend/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","authReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","auth","cart","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAwBC,eAAxB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUE,OAAOC,OAAP,MAAoB,2BAApB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAKA,MAAMI,WAAW,GAAGf,eAAe,CAAC;AAAEgB,EAAAA,IAAI,EAAEd,WAAR;AAAqBe,EAAAA,IAAI,EAAEhB;AAA3B,CAAD,CAAnC;AACA,MAAMiB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAGA,OAAO,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AAChCqB,EAAAA,OAAO,EAAEF,gBADuB;AAEhCG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADD;AADF,GAAD;AAHU,CAAD,CAA5B;AAUD,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B","sourcesContent":["import { configureStore,combineReducers  } from \"@reduxjs/toolkit\";\r\nimport cartReducer from './cartSlice'\r\nimport authReducer from './auth'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from \"redux-persist\";\r\n  import storage from \"redux-persist/lib/storage\";\r\n  const persistConfig = {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage,\r\n  };\r\n  const rootReducer = combineReducers({ auth: authReducer, cart: cartReducer });\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\n  export const store = configureStore({\r\n      reducer: persistedReducer,\r\n      middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n              },\r\n            }),\r\n        });\r\n      \r\n        export let persistor = persistStore(store);\r\n      \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}